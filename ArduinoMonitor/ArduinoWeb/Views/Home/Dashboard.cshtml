
<section id="graph">
    <div id="sensor-graph" style="width: 100%; height: 600px;">
    </div>
    <div id="sensor-hover-data" style="width: 50%">
        <table id="hover-data" class="display" style="width:100%;">
            <thead>
            <tr>
                <th>Humidity</th>
                <th>Fahrenheit</th>
                <th>Celsius</th>
                <th>Light</th>
            </tr>
            </thead>
            <tbody>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
            </tbody>
        </table>
    </div>
</section>

<section id="tabledata" style="padding-top:15px;">
    <table id="data" class="display" style="width:100%;">
        <thead>
            <tr>
                <th>ID</th>
                <th>Arduino</th>
                <th>Elapsed Minutes</th>
                <th>Year</th>
                <th>Date</th>
                <th>Celsius</th>
                <th>Fahrenheit</th>
                <th>Humidity</th>
                <th>Light</th>
            </tr>
        </thead>
        <tbody></tbody>
        <tfoot>
        </tfoot>
    </table>
</section>

@section scripts {
    <script type="text/javascript">
        var currentData = [];
        var datatable;
        var fData = [];
        var cData = [];
        var hData = [];
        var lData = [];

        function refreshData() {
            datatable.ajax.reload();
            $("label#refreshTime").html(formatDate(new Date()));
        }

        function updateGraph(sensorData) {
            for (var i = 0; i < sensorData.length; i++) {
                fData.push([sensorData[i].ElapsedMinutes, sensorData[i].TempFahrenheit]);
                cData.push([sensorData[i].ElapsedMinutes, sensorData[i].TempCelsius]);
                hData.push([sensorData[i].ElapsedMinutes, (sensorData[i].Humidity * 100)]);
                lData.push([sensorData[i].ElapsedMinutes, sensorData[i].Light]);
            }

            var data = [
                {
                    data: hData,
                    label: "Humidity %",
                    bars: {
                        show: true,
                        align: "center",
                        barWidth: 0.2,
                        fill: true,
                        lineWidth: 1
                    },
                    yaxis: 2
                },
                {
                    data: fData,
                    label: "Temperature F",
                    lines: { show: true },
                    points: { show: false }
                },
                {
                    data: cData,
                    label: "Temperature C",
                    lines: { show: true },
                    points: { show: false }
                },
                {
                    data: lData,
                    label: "Light",
                    lines: { show: true },
                    points: { show: false },
                    yaxis: 3
                }
            ];

            var options = {
                crosshair: {
                    mode: "x"
                },
                grid: {
                    hoverable: true,
                    autoHighlight: false
                },
                axisLabels: {
                    show: true
                },
                yaxes: [
                    {
                        position: "left",
                        axisLabel: "Temperature",
                        axisLabelFontSizePixels: 12,
                        axisLabelFontFamily: 'Verdana, Arial',
                        tickFormatter: function(v, axis) {
                            return v + "°";
                        },
                        min: -5,
                        max: 105
                    }, {
                        position: "right",
                        axisLabel: "Humidity",
                        axisLabelFontSizePixels: 12,
                        axisLabelFontFamily: 'Verdana, Arial',
                        tickFormatter: function(v, axis) {
                            return v + "%";
                        },
                        min: 0,
                        max: 100
                    },
                    {
                        position: "right",
                        axisLabel: "Light",
                        axisLabelFontSizePixels: 12,
                        axisLabelFontFamily: 'Verdana, Arial',
                        tickFormatter: function(v, axis) {
                            return v;
                        },
                        min: 40,
                        max: 60
                    }
                ]
            };

            //Draw graph
            var plot = $.plot($("#sensor-graph"), data, options);

            var legends = $("#sensor-graph .legendLabel");
            legends.each(function() {
                // fix the widths so they don't jump around
                $(this).css('width', $(this).width());
            });

            var updateLegendTimeout = null;
            var latestPosition = null;

            function updateLegend() {
                updateLegendTimeout = null;
                var pos = latestPosition;

                var axes = plot.getAxes();
                if (pos.x < axes.xaxis.min || pos.x > axes.xaxis.max ||
                    pos.y < axes.yaxis.min || pos.y > axes.yaxis.max) {
                    return;
                }

                var i, j, dataset = plot.getData();
                for (i = 0; i < dataset.length; ++i) {

                    var series = dataset[i];

                    // Find the nearest points, x-wise

                    for (j = 0; j < series.data.length; ++j) {
                        if (series.data[j][0] > pos.x) {
                            break;
                        }
                    }

                    // Now Interpolate
                    var y,
                        p1 = series.data[j - 1],
                        p2 = series.data[j];

                    if (p1 == null) {
                        y = p2[1];
                    } else if (p2 == null) {
                        y = p1[1];
                    } else {
                        y = p1[1] + (p2[1] - p1[1]) * (pos.x - p1[0]) / (p2[0] - p1[0]);
                    }

                    $("#hover-data").children().find("td").eq(i).text(y.toFixed(2));
                }
            }

            //Bind plothover event
            $("#sensor-graph").bind("plothover", function(event, pos, item) {
                latestPosition = pos;
                if (!updateLegendTimeout) {
                    updateLegendTimeout = setTimeout(updateLegend, 50);
                }
            });
        }

        function getData() {
            var data = [
                { "ElapsedMinutes": 1, "ID": 775723, "Arduino": 1, "Year": 2016, "Date": "2016-01-24 14:03:44.300", "TempCelsius": 20.50, "TempFahrenheit": 68.90, "Humidity": 1.00, "Light": 50.29, "BuildDate": "2014-01-24 00:00:00.000", "Location": "RDI Minneapolis - 901 N. Third St. Suite 350, Minneapolis, MN 55410", "Sensors": "DHT 22 - Celsius Temperature and Humidity, LM34 Fahrenheit Temperature", "Comment": "NULL" },
                { "ElapsedMinutes": 2, "ID": 775722, "Arduino": 1, "Year": 2016, "Date": "2016-01-24 14:02:44.287", "TempCelsius": 20.40, "TempFahrenheit": 68.72, "Humidity": 1.00, "Light": 50.29, "BuildDate": "2014-01-24 00:00:00.000", "Location": "RDI Minneapolis - 901 N. Third St. Suite 350, Minneapolis, MN 55410", "Sensors": "DHT 22 - Celsius Temperature and Humidity, LM34 Fahrenheit Temperature", "Comment": "NULL" },
                { "ElapsedMinutes": 3, "ID": 775721, "Arduino": 1, "Year": 2016, "Date": "2016-01-24 14:01:44.273", "TempCelsius": 20.50, "TempFahrenheit": 68.90, "Humidity": 1.00, "Light": 50.29, "BuildDate": "2014-01-24 00:00:00.000", "Location": "RDI Minneapolis - 901 N. Third St. Suite 350, Minneapolis, MN 55410", "Sensors": "DHT 22 - Celsius Temperature and Humidity, LM34 Fahrenheit Temperature", "Comment": "NULL" },
                { "ElapsedMinutes": 4, "ID": 775720, "Arduino": 1, "Year": 2016, "Date": "2016-01-24 14:00:44.260", "TempCelsius": 20.60, "TempFahrenheit": 69.08, "Humidity": 1.00, "Light": 50.29, "BuildDate": "2014-01-24 00:00:00.000", "Location": "RDI Minneapolis - 901 N. Third St. Suite 350, Minneapolis, MN 55410", "Sensors": "DHT 22 - Celsius Temperature and Humidity, LM34 Fahrenheit Temperature", "Comment": "NULL" },
                { "ElapsedMinutes": 5, "ID": 775719, "Arduino": 1, "Year": 2016, "Date": "2016-01-24 13:59:44.250", "TempCelsius": 20.70, "TempFahrenheit": 69.26, "Humidity": 1.00, "Light": 50.49, "BuildDate": "2014-01-24 00:00:00.000", "Location": "RDI Minneapolis - 901 N. Third St. Suite 350, Minneapolis, MN 55410", "Sensors": "DHT 22 - Celsius Temperature and Humidity, LM34 Fahrenheit Temperature", "Comment": "NULL" },
                { "ElapsedMinutes": 6, "ID": 775718, "Arduino": 1, "Year": 2016, "Date": "2016-01-24 13:58:44.240", "TempCelsius": 20.80, "TempFahrenheit": 69.44, "Humidity": 1.00, "Light": 50.49, "BuildDate": "2014-01-24 00:00:00.000", "Location": "RDI Minneapolis - 901 N. Third St. Suite 350, Minneapolis, MN 55410", "Sensors": "DHT 22 - Celsius Temperature and Humidity, LM34 Fahrenheit Temperature", "Comment": "NULL" },
                { "ElapsedMinutes": 7, "ID": 775717, "Arduino": 1, "Year": 2016, "Date": "2016-01-24 13:57:44.223", "TempCelsius": 20.90, "TempFahrenheit": 69.62, "Humidity": 1.00, "Light": 50.49, "BuildDate": "2014-01-24 00:00:00.000", "Location": "RDI Minneapolis - 901 N. Third St. Suite 350, Minneapolis, MN 55410", "Sensors": "DHT 22 - Celsius Temperature and Humidity, LM34 Fahrenheit Temperature", "Comment": "NULL" },
                { "ElapsedMinutes": 8, "ID": 775716, "Arduino": 1, "Year": 2016, "Date": "2016-01-24 13:56:44.210", "TempCelsius": 21.00, "TempFahrenheit": 69.80, "Humidity": 1.00, "Light": 50.39, "BuildDate": "2014-01-24 00:00:00.000", "Location": "RDI Minneapolis - 901 N. Third St. Suite 350, Minneapolis, MN 55410", "Sensors": "DHT 22 - Celsius Temperature and Humidity, LM34 Fahrenheit Temperature", "Comment": "NULL" },
                { "ElapsedMinutes": 9, "ID": 775715, "Arduino": 1, "Year": 2016, "Date": "2016-01-24 13:55:44.183", "TempCelsius": 21.10, "TempFahrenheit": 69.98, "Humidity": 1.00, "Light": 50.20, "BuildDate": "2014-01-24 00:00:00.000", "Location": "RDI Minneapolis - 901 N. Third St. Suite 350, Minneapolis, MN 55410", "Sensors": "DHT 22 - Celsius Temperature and Humidity, LM34 Fahrenheit Temperature", "Comment": "NULL" },
                { "ElapsedMinutes": 10, "ID": 775714, "Arduino": 1, "Year": 2016, "Date": "2016-01-24 13:54:44.170", "TempCelsius": 21.40, "TempFahrenheit": 70.52, "Humidity": 1.00, "Light": 50.10, "BuildDate": "2014-01-24 00:00:00.000", "Location": "RDI Minneapolis - 901 N. Third St. Suite 350, Minneapolis, MN 55410", "Sensors": "DHT 22 - Celsius Temperature and Humidity, LM34 Fahrenheit Temperature", "Comment": "NULL" }
            ];
            return data;
        }

        $(document).ready(function() {
            datatable = $('#data')
                .on('xhr.dt', function(e, settings, json, xhr) {
                    currentData = json;
                })
                .DataTable({
                    processing: true,
                    ajax: {
                        url: "/api/last/@ViewBag.Count",
                        dataSrc: ""
                    },
                    columns: [
                        { data: 'ID', visible: false },
                        { data: 'ArduinoID', visible: false },
                        { data: 'ElapsedMinutes' },
                        { data: 'Year', visible: false },
                        {
                            data: 'Date',
                            render: function(data) { return formatDateNoYear(new Date(data + "Z").addHours(@ViewBag.TimeZoneOffset)); }
                        },
                        {
                            data: 'TempCelsius',
                            render: function(data) { return isNull(data) ? "--" : data + "°"; }
                        },
                        {
                            data: 'TempFahrenheit',
                            render: function(data) { return isNull(data) ? "--" : data + "°"; }
                        },
                        {
                            data: 'Humidity',
                            render: function(data) { return isNull(data) ? "--" : data + "%"; }
                        },
                        {
                            data: 'Light',
                            render: function(data) { return isNull(data) ? "--" : data + "%"; }
                        }
                    ],
                    order: [[2, "asc"]]
                });
            $('<button id="refresh" onclick="refreshData()" style="margin-left:20px" class="btn btn-primary btn-sm">Refresh</button>').appendTo('div.dataTables_length');
            currentData = getData();
            updateGraph(currentData);
        });
    </script>
}
